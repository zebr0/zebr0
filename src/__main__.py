import argparseimport loggingimport sysimport zebr0lib.configimport ec2import route53def setup_logs(stream, debug):  # TODO: extract into zebr0lib ?    stream_handler = logging.StreamHandler(stream)    stream_handler.setFormatter(logging.Formatter("{asctime} | {levelname:<7.7} | {name:<25.25} | {message}", style="{"))    root_logger = logging.getLogger()    root_logger.setLevel(logging.DEBUG if debug else logging.INFO)    root_logger.addHandler(stream_handler)def init_environment(config_service):    ec2_service = ec2.Service(config_service)    vpc_id = ec2_service.create_vpc_if_needed()    subnet_id = ec2_service.create_subnet_if_needed(vpc_id)    ec2_service.create_internet_gateway_if_needed(vpc_id)    instance_id = ec2_service.create_instance_if_needed(subnet_id)    address = ec2_service.create_address_if_needed(instance_id)    route53_service = route53.Service(config_service)    route53_service.create_dns_entry_if_needed(address)def destroy_environment(config_service):    route53_service = route53.Service(config_service)    route53_service.destroy_dns_entry_if_needed()    ec2_service = ec2.Service(config_service)    ec2_service.destroy_address_if_needed()    ec2_service.destroy_instance_if_needed()    ec2_service.destroy_internet_gateway_if_needed()    ec2_service.destroy_subnet_if_needed()    ec2_service.destroy_vpc_if_needed()if __name__ == "__main__":    argparser = argparse.ArgumentParser(description="")    subparsers = argparser.add_subparsers()    subparsers.add_parser("init", help="").set_defaults(func=init_environment)    subparsers.add_parser("destroy", help="").set_defaults(func=destroy_environment)    argparser.add_argument("project", help="")    argparser.add_argument("stage", help="")    argparser.add_argument("--debug", action="store_true", help="")    args = argparser.parse_args()    setup_logs(sys.stdout, args.debug)    config_service = zebr0lib.config.Service(args.project, args.stage)    args.func(config_service)